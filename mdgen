#!/bin/bash

# Generates html from a markdown file and opens it in the browser
# before removing the evidence.

# -o option opens the .html file after generation
# -r option refreshes the current active internet window after file generation

if [[ "$OSTYPE" == "darwin"* ]]; then
	mdgenPath=$(dirname $(which mdgen))
else
	# Linux version
	mdgenPath=$(dirname $(readlink -f $(which mdgen)))
fi

# Strip the .md file extension from the filename.
if [ $1 = "-o" -o $1 = "-r" ]; then
	fileName=$(expr "$2" : '\([a-zA-Z0-9]*\).*')
else
	fileName="$(expr "$1" : '\([a-zA-Z0-9]*\).*')"
fi

if  [ $1 = "-o" ]; then
    # prepend with strapdown.js header and mathjax script
	cat $mdgenPath/mdgenerator/prepend.html > $fileName.html
	# If there's a mdheader file in the settings directory
	mdheader=$mdgenPath/settings/mdheader.md
	if [ -f "$mdheader" ]; then
		# parse it and prepend it to the body of the document.
		python3 $mdgenPath/mdgenerator/parse.py "$mdheader" >> $fileName.html
	fi
	# insert the markdown
	#pandoc -t html --mathjax $1 >> ${1}.html
	python3 $mdgenPath/mdgenerator/parse.py $2 >> $fileName.html
	# append with strapdown footer
	cat $mdgenPath/mdgenerator/append.html  >> $fileName.html
	# Open the .html file
	google-chrome $fileName.html

elif [ $1 = "-r" ]; then
	# prepend with strapdown.js header and mathjax script
	cat $mdgenPath/mdgenerator/prepend.html > $fileName.html
	# If there's a mdheader file in the settings directory
	mdheader=$mdgenPath/settings/mdheader.md
	if [ -f "$mdheader" ]; then
		# parse it and prepend it to the body of the document.
		python3 $mdgenPath/mdgenerator/parse.py "$mdheader" >> $fileName.html
	fi
	# insert the markdown
	#pandoc -t html --mathjax $1 >> $fileName.html
	python3 $mdgenPath/mdgenerator/parse.py $2 >> $fileName.html
	# append with strapdown footer
	cat $mdgenPath/mdgenerator/append.html  >> $fileName.html
	
	# refresh all open, visible tabs of chrome
		# OSX version to refresh visible chrome tab
		if [[ "$OSTYPE" == "darwin"* ]]; then
			osascript -e 'tell application "Google Chrome" to tell the active tab of its first window to reload'
		else
		# Linux version
			focused_window_id=$(xdotool getwindowfocus) # get current focused window
			# Refresh Chrome
			for pid in $(xdotool search --onlyvisible --class chrome); do
		    	xdotool windowfocus $pid key 'ctrl+r'
		    	sleep 0.05
			done
			# Switch back to original window
			xdotool windowfocus $focused_window_id
		fi

else
	# prepend with strapdown.js header and mathjax script
	cat $mdgenPath/mdgenerator/prepend.html > $fileName.html
	# If there's a mdheader file in the settings directory
	mdheader=$mdgenPath/settings/mdheader.md
	if [ -f "$mdheader" ]; then
		# parse it and prepend it to the body of the document.
		python3 $mdgenPath/mdgenerator/parse.py "$mdheader" >> $fileName.html
	fi
	echo $fileName
	# insert the markdown
	#pandoc -t html --mathjax $1 >> $fileName.html
	python3 $mdgenPath/mdgenerator/parse.py $1 >> $fileName.html
	# append with strapdown footer
	cat $mdgenPath/mdgenerator/append.html  >> $fileName.html

fi
